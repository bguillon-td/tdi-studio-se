<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser
    	org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        java.util.List
        java.util.Map
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String destination = ElementParameterParser.getValue(node, "__DESTINATION__");
String dieOnErrorStr = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
boolean dieOnError = (dieOnErrorStr!=null&&!("").equals(dieOnErrorStr))?("true").equals(dieOnErrorStr):false;
if(destination!=null && !"".equals(destination)){
	cid = destination;
}

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {//1
	IMetadataTable metadata = metadatas.get(0);
	
	if (metadata != null) {//2
	
		List<IMetadataColumn> columnList = metadata.getListColumns();
		List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();

		// if output columns are defined
		if (outgoingConns != null && outgoingConns.size() > 0){//3
		
			IConnection outgoingConn = outgoingConns.get(0);
			if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) { //4
	
				boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
				String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
				String conn = "TMDMService_" + connection;
				String mdmUrl = ElementParameterParser.getValue(node, "__MDMURL__");
				String username = ElementParameterParser.getValue(node, "__USERNAME__");

				String concept = ElementParameterParser.getValue(node, "__CONCEPT__");
				
				String dataCluster = ElementParameterParser.getValue(node, "__DATACLUSTER__");
				boolean isStaging = "STAGING".equalsIgnoreCase(ElementParameterParser.getValue(node, "__CONTAINER_TYPE__"));
				
				boolean isSingle = ("true").equals(ElementParameterParser.getValue(node, "__USE_ITEMS__"));
				List<Map<String, String>> ids = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__IDS__");
				List<Map<String, String>> operations = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__OPERATIONS__");
				
				String spellThrehold = ElementParameterParser.getValue(node, "__SPELLTHREHOLD__");
				String skip = ElementParameterParser.getValue(node, "__SKIP__");
				String bufferSize = ElementParameterParser.getValue(node, "__FETCHSIZE__");
				String limit = ElementParameterParser.getValue(node, "__MAXVALUE__");
				if(spellThrehold==null || ("").equals(spellThrehold)){
					spellThrehold = "0";
				} 
				if(skip==null || ("").equals(skip)){
					skip = "0";
				} 
				if(limit==null || ("").equals(limit)){
					limit = "0";
				}
				%>       
				int nb_line_<%=cid %> = 0;
				<%if(!useExistingConn){%>
					org.talend.mdm.webservice.TMDMService_ServiceLocator tmdmService_<%=cid %> = new org.talend.mdm.webservice.TMDMService_ServiceLocator();
					tmdmService_<%=cid %>.setTMDMPortEndpointAddress(<%=mdmUrl %>);
					org.talend.mdm.webservice.TMDMService_PortType tmdmWS_<%=cid %> = tmdmService_<%=cid %>.getTMDMPort();    
					org.talend.mdm.webservice.TMDMServiceSoapBindingStub stub_<%=cid %> = (org.talend.mdm.webservice.TMDMServiceSoapBindingStub)tmdmWS_<%=cid %>;
	
					// Authentification
					stub_<%=cid %>.setUsername(<%=username %>);
					
                    <%
                    String passwordFieldName = "__PASSWORD__";
                    %>
                    
                    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
					
					stub_<%=cid %>.setPassword(decryptedPassword_<%=cid%>);
				<%}else{%>
					org.talend.mdm.webservice.TMDMService_PortType tmdmWS_<%=cid %> = (org.talend.mdm.webservice.TMDMService_PortType)globalMap.get("<%=conn%>");
				<%}%>
				
				org.talend.mdm.webservice.WSDataClusterPK dataCluster_<%=cid %> = new org.talend.mdm.webservice.WSDataClusterPK(<%=dataCluster %> + "<%=isStaging?"#STAGING":""%>");

				<%if(!isSingle){//item%>
					String[] ids_<%=cid %> = {
						<%
						for(int i=0; i<ids.size(); i++){
							Map<String, String> map = ids.get(i);
							String idValue = map.get("IDVALUE");
							%>
							<%=(i==0? "":",")%><%=idValue %>
						<%
						}
						%>
					};
					org.talend.mdm.webservice.WSGetItem wsitem_<%=cid %> = 
					new org.talend.mdm.webservice.WSGetItem(new org.talend.mdm.webservice.WSItemPK(<%=concept %>,ids_<%=cid %>, dataCluster_<%=cid %>));
					String <%=outgoingConn.getName() %>_xml = "";
					try {
						org.talend.mdm.webservice.WSItem item_<%=cid %>=tmdmWS_<%=cid %>.getItem(wsitem_<%=cid %>);
						<%=outgoingConn.getName() %>_xml = item_<%=cid %>.getContent();
					} catch(java.lang.Exception e) {
						<%if(dieOnError) {%>
						throw e;
						<% } else { %>
						System.err.println(e.getMessage());
						<% } %>			
					}
					nb_line_<%=cid %> ++;
				
				<%
				}else{//items
				%>
					org.talend.mdm.webservice.WSWhereCondition wc_<%=cid %> = null;
					java.util.List<org.talend.mdm.webservice.WSWhereItem> conditions_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSWhereItem>();
					<%
					boolean isOnlyOrPredicate=true;
					for(int i=0; i < operations.size(); i++){
						Map<String, String> map= operations.get(i);
						String xpath=map.get("XPATH");
						String operator=map.get("FUNCTION");
						String value = map.get("VALUE");
						String predicate = map.get("PREDICATE");
						if((i < operations.size()-1) && (!"OR".equals(predicate))){
							isOnlyOrPredicate = false;
						}
						%>

						wc_<%=cid %> =new org.talend.mdm.webservice.WSWhereCondition(
							<%=xpath %>,
							org.talend.mdm.webservice.WSWhereOperator.<%=operator %>, 
							<%="EMPTY_NULL".equals(operator)? null:value %>, 
							false,
							org.talend.mdm.webservice.WSStringPredicate.<%=predicate %>);

						org.talend.mdm.webservice.WSWhereItem wsItem_<%=i %>_<%=cid %>=new org.talend.mdm.webservice.WSWhereItem(null,wc_<%=cid %>,null);
						conditions_<%=cid %>.add(wsItem_<%=i %>_<%=cid %>);
					<%
					}//for
					%>
					org.talend.mdm.webservice.WSWhereItem wsItem_<%=cid %> = null;
					if(conditions_<%=cid %>.size() > 0){
					<%
					if(!isOnlyOrPredicate){
					%>
						wsItem_<%=cid %> =new org.talend.mdm.webservice.WSWhereItem(conditions_<%=cid %>.toArray(new org.talend.mdm.webservice.WSWhereItem[conditions_<%=cid %>.size()]),null,null);
					<%
					}else{
					%>
						wsItem_<%=cid %> =new org.talend.mdm.webservice.WSWhereItem(null,null,conditions_<%=cid %>.toArray(new org.talend.mdm.webservice.WSWhereItem[conditions_<%=cid %>.size()]));
					<%
					}
					%>
					}
					
					int limit_<%=cid%> = <%=limit%>;
					int recordsPerPage_<%=cid%> = <%=bufferSize%>;
					int skip_<%=cid%> = <%=skip%>;
					
					if (skip_<%=cid%> < 0)
		                skip_<%=cid%> = 0;
		
		            if (recordsPerPage_<%=cid%> <= 0)
		                recordsPerPage_<%=cid%> = -1;// read whole records in one time
		
		            if (limit_<%=cid%> <= 0)
		                limit_<%=cid%> = -1;// no limit
					
		            int retrievedCount_<%=cid%> = 0;
           			int readRecordsSize_<%=cid%> = limit_<%=cid%> == -1 ? recordsPerPage_<%=cid%> : (recordsPerPage_<%=cid%> == -1 ? limit_<%=cid%> : (recordsPerPage_<%=cid%> > limit_<%=cid%> ? limit_<%=cid%>
                    : recordsPerPage_<%=cid%>));

					org.talend.mdm.webservice.WSGetItems getitems_<%=cid %>=null;
					
            		boolean continueFlag_<%=cid%> = true;
            		int totalCount_<%=cid%> = -1;<%//For TDI-26039%>
            		while (continueFlag_<%=cid%>) {

		                getitems_<%=cid%>=new org.talend.mdm.webservice.WSGetItems(
		                					<%=concept%>, 
		                					readRecordsSize_<%=cid%>,
		                					skip_<%=cid%> + retrievedCount_<%=cid%>,
									    	<%=spellThrehold%>,  //spell Threshold
											true,
											wsItem_<%=cid%>,
											dataCluster_<%=cid%>);


						String[] items_<%=cid%> = {};
						try {
							items_<%=cid%> = tmdmWS_<%=cid%>.getItems(getitems_<%=cid%>);
							if(totalCount_<%=cid%> < 0){ 
								totalCount_<%=cid%> = Integer.valueOf(items_<%=cid%>[0].replaceAll("<totalCount>", "").replaceAll("</totalCount>", ""));
							}
						} catch(java.lang.Exception e) {
							<%if(dieOnError) {%>
							throw e;
							<% } else { %>
							System.err.println(e.getMessage());
							<% } %>
						}
						retrievedCount_<%=cid%> += (items_<%=cid%>.length - 1);
						if (totalCount_<%=cid%> == retrievedCount_<%=cid%> || recordsPerPage_<%=cid%> == -1 || (items_<%=cid%>.length - 1) < readRecordsSize_<%=cid%> || limit_<%=cid%> == retrievedCount_<%=cid%>) {
		                    continueFlag_<%=cid%> = false;
		                } else if (limit_<%=cid%> != -1 && limit_<%=cid%> < retrievedCount_<%=cid%> + readRecordsSize_<%=cid%>) {
		                    readRecordsSize_<%=cid%> = limit_<%=cid%> - retrievedCount_<%=cid%>;
		                }
                    	
                    	for(int i_<%=cid%> = 1, itemsLength_<%=cid%> = items_<%=cid%>.length; i_<%=cid%> < itemsLength_<%=cid%>; i_<%=cid%>++){
							nb_line_<%=cid%> ++;
							String <%=outgoingConn.getName()%>_xml = items_<%=cid%>[i_<%=cid%>];	
            		
				<%
				}//end items
				%>
			<%
			}//4
		}//3
	}//2
}//1
%>