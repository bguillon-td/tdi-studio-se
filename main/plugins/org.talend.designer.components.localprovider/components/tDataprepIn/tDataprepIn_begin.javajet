<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.designer.codegen.config.NodeConnectionsHelper
    org.talend.designer.codegen.config.NodeParamsHelper
    org.talend.core.model.metadata.MetadataColumn
    org.talend.core.model.metadata.types.JavaType
    org.talend.core.model.metadata.types.JavaTypesManager
    java.util.List
    java.util.Iterator
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<? extends IConnection> outConnections = node.getOutgoingConnections();

if((outConnections==null)&&(outConnections.isEmpty())) {
	return stringBuffer.toString();
}

boolean isValid = false;
IConnection outFlowConn = null;
for(IConnection outConnection : outConnections) {
	if(outConnection.getLineStyle().hasConnectionCategory(IConnectionCategory.MAIN)) {
		isValid = true;
		if(outConnection.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
			outFlowConn = outConnection;
		}
	}
}

if(!isValid) {
	return stringBuffer.toString();
}

String uname = ElementParameterParser.getValue(node, "__UNAME__");
%>

us.monoid.web.JSONResource stats_<%=cid %> = (us.monoid.web.JSONResource) result_<%=uname%>;
us.monoid.json.JSONArray arrayJson_<%=cid %> = (us.monoid.json.JSONArray)stats_<%=cid %>.get("records");

for(int current_nb_line_<%=cid%>=0;current_nb_line_<%=cid%> < arrayJson_<%=cid %>.length(); current_nb_line_<%=cid%>++){
<%
if(outFlowConn==null) {
	return stringBuffer.toString();
}
%>
us.monoid.json.JSONObject jsOBJ_<%=cid %> = arrayJson_<%=cid %>.getJSONObject(current_nb_line_<%=cid%>);
Object value_<%=cid%> = null;
<%
int columnNb = 0;
for (IMetadataColumn column : outFlowConn.getMetadataTable().getListColumns()) {
	String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
    JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
    String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
    
    String defaultValue = column.getDefault();
    boolean isNotSetDefault = (defaultValue == null || defaultValue.trim().length()==0);
%>
	value_<%=cid%> = jsOBJ_<%=cid%>.get("<%=String.format("%04d", columnNb++)%>");
<%
	if(javaType == JavaTypesManager.STRING){
%>
		<%=outFlowConn.getName()%>.<%=column.getLabel() %> = value_<%=cid%> == null ? <%@ include file="./set_default_value.javajet"%> : value_<%=cid%>.toString();
<%
	} else {
%>
		if(value_<%=cid%> != null && !value_<%=cid%>.toString().isEmpty()) {
<%
		if(javaType == JavaTypesManager.OBJECT) {
%>
			<%=outFlowConn.getName()%>.<%=column.getLabel() %> = value_<%=cid%>.toString();
<%
		} else if(javaType == JavaTypesManager.DATE) {
%>
			<%=outFlowConn.getName()%>.<%=column.getLabel() %> = ParserUtils.parseTo_Date(value_<%=cid%>.toString(), <%=pattern%>);
<%
		} else if(javaType == JavaTypesManager.BYTE_ARRAY) {
%>
			<%=outFlowConn.getName()%>.<%=column.getLabel() %> = value_<%=cid%>.toString().getBytes();
<%
		} else {
%>
			<%=outFlowConn.getName()%>.<%=column.getLabel() %> = ParserUtils.parseTo_<%=typeToGenerate %>(value_<%=cid%>.toString());
<%
		}
%>
		} else {
			<%=outFlowConn.getName() %>.<%=column.getLabel() %> = <%@ include file="./set_default_value.javajet"%>;
		}
<%
	}
}
%>
